/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 21, 2014 at 9:24:05 PM Central European Standard Time
* Operating System: Version 8.1 (Build 12B411)
* Image Source: /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIAlertView.h>

@class UIAlertView, NSArray, NSString;

@interface SBAlertItem : NSObject <UIAlertViewDelegate> {

	UIAlertView* _alertSheet;
	char _orderOverSBAlert;
	char _preventLockOver;
	char _didEverActivate;
	char _ignoreIfAlreadyDisplaying;
	char _didPlayPresentationSound;
	char _allowInSetup;
	char _pendInSetupIfNotAllowed;
	char _pendWhileKeyBagLocked;
	NSArray* _allowedBundleIDs;
	char _allowInCar;
	char _allowMessageInCar;

}

@property (assign,nonatomic) char ignoreIfAlreadyDisplaying;              //@synthesize ignoreIfAlreadyDisplaying=_ignoreIfAlreadyDisplaying - In the implementation block
@property (assign,nonatomic) char allowInSetup;                           //@synthesize allowInSetup=_allowInSetup - In the implementation block
@property (assign,nonatomic) char pendInSetupIfNotAllowed;                //@synthesize pendInSetupIfNotAllowed=_pendInSetupIfNotAllowed - In the implementation block
@property (assign,nonatomic) char pendWhileKeyBagLocked;                  //@synthesize pendWhileKeyBagLocked=_pendWhileKeyBagLocked - In the implementation block
@property (nonatomic,retain) NSArray * allowedBundleIDs;                  //@synthesize allowedBundleIDs=_allowedBundleIDs - In the implementation block
@property (assign,nonatomic) char allowInCar;                             //@synthesize allowInCar=_allowInCar - In the implementation block
@property (assign,nonatomic) char allowMessageInCar;                      //@synthesize allowMessageInCar=_allowMessageInCar - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_alertItemsController;
+(void)activateAlertItem:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2 ;
-(void)dismiss;
-(id)alertController;
-(id)alertSheet;
-(void)didDeactivateForReason:(int)arg1 ;
-(void)buttonDismissed;
-(Class)alertSheetClass;
-(void)willRelockForButtonPress:(char)arg1 ;
-(char)dismissOnLock;
-(char)allowMenuButtonDismissal;
-(void)performUnlockAction;
-(void)configure:(char)arg1 requirePasscodeForActions:(char)arg2 ;
-(void)dismiss:(int)arg1 ;
-(void)willActivate;
-(id)lockLabel;
-(char)shouldShowInEmergencyCall;
-(char)shouldShowInLockScreen;
-(char)forcesModalAlertAppearance;
-(id)sound;
-(void)setAllowInSetup:(char)arg1 ;
-(void)setPendInSetupIfNotAllowed:(char)arg1 ;
-(void)setAllowMessageInCar:(char)arg1 ;
-(char)didPlayPresentationSound;
-(void)_playPresentationSound;
-(char)hasActiveKeyboardOnScreen;
-(void)cleanPreviousConfiguration;
-(char)allowLockScreenDismissal;
-(char)allowAutoUnlock;
-(char)undimsScreen;
-(char)unlocksScreen;
-(int)unlockSource;
-(char)togglesMediaControls;
-(char)dismissOnModalDisplayActivation;
-(char)isCriticalAlert;
-(void)playPresentationSound;
-(id)shortLockLabel;
-(double)autoDismissInterval;
-(void)setOrderOverSBAlert:(char)arg1 ;
-(char)preventLockOver;
-(void)setPreventLockOver:(char)arg1 ;
-(char)_didEverActivate;
-(void)didActivate;
-(void)screenWillUndim;
-(void)didFailToActivate;
-(void)willDeactivateForReason:(int)arg1 ;
-(void)noteVolumeOrLockPressed;
-(int)alertItemNotificationType;
-(id)alertItemNotificationDate;
-(id)alertItemNotificationSender;
-(char)behavesSuperModally;
-(char)reappearsAfterLock;
-(char)reappearsAfterUnlock;
-(char)preventInterruption;
-(int)alertPriority;
-(char)displayActionButtonOnLockScreen;
-(id)prepareNewAlertSheetWithLockedState:(char)arg1 requirePasscodeForActions:(char)arg2 ;
-(char)dismissesAutomatically;
-(char)_dismissesOverlaysOnLockScreen;
-(char)ignoreIfAlreadyDisplaying;
-(void)setIgnoreIfAlreadyDisplaying:(char)arg1 ;
-(char)allowInSetup;
-(char)pendInSetupIfNotAllowed;
-(char)pendWhileKeyBagLocked;
-(void)setPendWhileKeyBagLocked:(char)arg1 ;
-(NSArray *)allowedBundleIDs;
-(void)setAllowedBundleIDs:(NSArray *)arg1 ;
-(char)allowInCar;
-(void)setAllowInCar:(char)arg1 ;
-(char)allowMessageInCar;
@end

